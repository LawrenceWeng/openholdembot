##OpenPPL_License_Text##
//*****************************************************************************
//
// OpenPPL Library
//   Supporting functions for OpenPPL.
//   These functions will be loaded by OpenHoldem in the background
//   and will be available both for OpenPPL and OH-script users.
//   This library is mostly written in OH-script,
//   but it can be extended by OpenPPL-functions, as both formats are 100% compatible.
//
// OpenPPL is part of the OpenHoldem project
//   Source code:           http://code.google.com/p/openholdembot/
//   Download page:         https://sites.google.com/site/openholdempokerbot/downloads
//   Forums:                http://www.maxinmontreal.com/forums/index.php
//   Licensed under GPL v3: http://www.gnu.org/licenses/gpl.html
//
// The original PPL (Poker Programming Language) got invented by
//   Shanky Bonusbots:      http://bonusbots.com/support/index.php
//
// Required OpenHoldem version: 7.0.2 or later
//
// Contributors:
//   Bob3456
//   CoolBotMe123
//   CrumbleSunday
//   Dr.Kaktuz
//   Efu
//   Fn101
//   Fqfq	
//   Gecko
//   JConner
//   JokeDoke
//   KaeKruse
//   Kyo
//   Lavezzi
//   MerzkiyTipon
//   Morello
//   MrRuder
//   Nik0
//   NPNG
//   Poker_Dog
//   Postenjak
//   Rambam
//   Relhby
//   Satanikut
//   Stangelnator
//   SteveG1963
//   Strikles
//   SuperBlak
//   TheHighFish
//   ThemAndMe
//   Want2Learn
//   Zolp
//
//*****************************************************************************

//*****************************************************************************
//
// OpenPPL - Players and Opponents
//
//*****************************************************************************

##HandIsHeadsup##
TwoPlayersCompetingForThisPot

##TableIsHeadsup##
WHEN istournament AND OnlyTwoPlayersLeftAtTournamentTable RETURN True FORCE
WHEN (NOT istournament) AND (nplayersdealt = 2) RETURN True FORCE

##TwoPlayersCompetingForThisPot##
// Just to create some verbosity in HandIsHeadsup
WHEN nplayersplaying = 2 RETURN True FORCE

##OnlyTwoPlayersLeftAtTournamentTable##
// Just to create some verbosity in HandIsHeadsup
WHEN (not istournament) RETURN False FORCE
// Players in tournaments get always dealt even if they are sitting out.
// http://www.maxinmontreal.com/forums/viewtopic.php?f=297&t=19778
// So we check seated players
WHEN (nplayersseated = 2) RETURN True FORCE

##PlayersAtStartOfThisRound##
(betround == ConstBetRoundPreflop) ? nplayersround1 :
(betround == ConstBetRoundFlop)    ? nplayersround2 :
(betround == ConstBetRoundTurn)    ? nplayersround3 :
(betround == ConstBetRoundRiver)   ? nplayersround4 :
ERROR_Betround_Out_Of_Range

##Opponents##
OpponentsLeft

##OpponentsAtTable##
nopponentsseated

##NumberOfOpponentsAllin##
(Opponents>1 OR (Opponents==1 AND AmountToCall<StackSize))? Opponents_SumAllinBits:
(Opponents==1 AND AmountToCall==StackSize)? 1:
0
   
##Casino_Moves_Allinbets_Immediatelly_To_The_Mainpot##
// Some casinos don't display the bets of players who are allin,
// but move them immediately to the main-pot (and/or sitepots)
// so we can no longer assume that they have a positive bet.
// http://www.maxinmontreal.com/forums/viewtopic.php?f=156&t=15493
sitename$ongame

##OpponentIsAllin##
NumberOfOpponentsAllin > 0

##Opponents_SumAllinBits##
`Opponents_AllinBits

##Opponents_AllinBits##
[(betround == ConstBetRoundPreflop) AND NOT Casino_Moves_Allinbets_Immediatelly_To_The_Mainpot] ?
// Player must be playing, his balance must be 0 and he must have a positive bet.
[0
|(((opponentsplayingbits & (1 << 0)) AND (currentbet0 > 0) AND (balance0 == 0)) ? 1 << 0 : 0)
|(((opponentsplayingbits & (1 << 1)) AND (currentbet1 > 0) AND (balance1 == 0)) ? 1 << 1 : 0)
|(((opponentsplayingbits & (1 << 2)) AND (currentbet2 > 0) AND (balance2 == 0)) ? 1 << 2 : 0)
|(((opponentsplayingbits & (1 << 3)) AND (currentbet3 > 0) AND (balance3 == 0)) ? 1 << 3 : 0)
|(((opponentsplayingbits & (1 << 4)) AND (currentbet4 > 0) AND (balance4 == 0)) ? 1 << 4 : 0)
|(((opponentsplayingbits & (1 << 5)) AND (currentbet5 > 0) AND (balance5 == 0)) ? 1 << 5 : 0)
|(((opponentsplayingbits & (1 << 6)) AND (currentbet6 > 0) AND (balance6 == 0)) ? 1 << 6 : 0)
|(((opponentsplayingbits & (1 << 7)) AND (currentbet7 > 0) AND (balance7 == 0)) ? 1 << 7 : 0)
|(((opponentsplayingbits & (1 << 8)) AND (currentbet8 > 0) AND (balance8 == 0)) ? 1 << 8 : 0)
|(((opponentsplayingbits & (1 << 9)) AND (currentbet9 > 0) AND (balance9 == 0)) ? 1 << 9 : 0)
]
:
// Player must be playing, his balance must be 0
// His bet might or might not be > 0 (so it does not get checked),
// because the player could be gone allin in a previous betting round
// or he plays at a casino where his chips get immediatelly moved to the main pot. 
[0
|(((opponentsplayingbits & (1 << 0)) AND balance0 == 0) ? 1 << 0 : 0)
|(((opponentsplayingbits & (1 << 1)) AND balance1 == 0) ? 1 << 1 : 0)
|(((opponentsplayingbits & (1 << 2)) AND balance2 == 0) ? 1 << 2 : 0)
|(((opponentsplayingbits & (1 << 3)) AND balance3 == 0) ? 1 << 3 : 0)
|(((opponentsplayingbits & (1 << 4)) AND balance4 == 0) ? 1 << 4 : 0)
|(((opponentsplayingbits & (1 << 5)) AND balance5 == 0) ? 1 << 5 : 0)
|(((opponentsplayingbits & (1 << 6)) AND balance6 == 0) ? 1 << 6 : 0)
|(((opponentsplayingbits & (1 << 7)) AND balance7 == 0) ? 1 << 7 : 0)
|(((opponentsplayingbits & (1 << 8)) AND balance8 == 0) ? 1 << 8 : 0)
|(((opponentsplayingbits & (1 << 9)) AND balance9 == 0) ? 1 << 9 : 0)
]

##OpponentsLeft##
// Does also consider players who are allin 
// (contrary to Shankys, who consider players allin in this round, but not from previous rounds).
nopponentsplaying

##OpponentsOnFlop##
(nplayersround2 - 1)

##OpponentsOnTurn##
(nplayersround3 - 1)

##OpponentsOnRiver##
(nplayersround4 - 1)

##OpponentsWithLowerStack##
  (((balance0 + currentbet0) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0001) ? 1:0)
+ (((balance1 + currentbet1) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0002) ? 1:0)
+ (((balance2 + currentbet2) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0004) ? 1:0)
+ (((balance3 + currentbet3) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0008) ? 1:0)
+ (((balance4 + currentbet4) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0010) ? 1:0)
+ (((balance5 + currentbet5) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0020) ? 1:0)
+ (((balance6 + currentbet6) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0040) ? 1:0)
+ (((balance7 + currentbet7) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0080) ? 1:0)
+ (((balance8 + currentbet8) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0100) ? 1:0)
+ (((balance9 + currentbet9) < MaximumPossibleBetsizeIndollars) AND (playersseatedbits & 0x0200) ? 1:0)

##StillToActPreflop##
// Precondition: first action, but this gets checked in StillToAct
InBigBlind ? 0 :
InSmallBlind ? 1 :
// Not in the blinds
(MissingSmallBlind > 0) ? (nchairsdealtleft + 1) :
(nchairsdealtleft + 2)

##StillToActPostflop##
// Precondition: first action, but this gets checked in StillToAct
((OpponentsLeft + 1) - betposition)

##StillToAct##
(BotsActionsOnThisRoundIncludingChecks > 0) ? HINT_StillToAct_Is_Only_Valid_On_First_Orbit :
((betround == ConstBetRoundPreflop) AND (BotsActionsOnThisRoundIncludingChecks == 0)) ? StillToActPreflop:
((betround != ConstBetRoundPreflop) AND (BotsActionsOnThisRoundIncludingChecks == 0)) ? StillToActPostflop:
0